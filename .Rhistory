trend.all<-vector(length=(39-window.length+2))
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- prepared_ADPE[,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
plot(trend.all)
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE_long[prepared_ADPE_long$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T))
{
k.best<-k
print(k)
}
}
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,1.2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
aggregated_abundance_all
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,3e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,5e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,6e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1.5e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
hist(correlations.scores)
max(correlations.scores,na.rm=T)
=5.68/2.15
5.68/2.15
5.407/1.42
1-pf(qf(0.025,6,6),6,6)
plot(seq(0.001,10,0.001),df(seq(0.001,10,0.001),6,6))
?df
plot(seq(0.001,10,0.001),pf(seq(0.001,10,0.001),6,6))
install.packages("Stat2Data")
library(Stat2Data)
BirdNest
?Stat2Data
Stat2Data$BirdData
Stat2Data$BirdNest
BirdNest
library(readr)
BirdNest <- read_csv("Desktop/BirdNest.csv")
View(BirdNest)
head(BirdNest)
hist(BirdNest$No.eggs)
hist(BirdNest$Incubate)
plot(BirdNest$Incubate,BirdNest$No.eggs)
plot(BirdNest$Incubate,BirdNest$Totcare)
plot(BirdNest$Incubate~BirdNest$Location)
boxplot(BirdNest$Incubate~BirdNest$Location)
boxplot(BirdNest$Totcare~BirdNest$Location)
?BirdNest
plot(BirdNest$Totcare,BirdNest$No.eggs)
plot(BirdNest$Incubate,BirdNest$Nestling)
lm(BirdNest$Incubate~BirdNest$Nestling)
summary(lm(BirdNest$Incubate~BirdNest$Nestling))
plot(BirdNest$Totcare,BirdNest$Length)
summary(lm(BirdNest$Length~BirdNest$Incubate))
cor.test(BirdNest$Length~BirdNest$Incubate)
cor.test(BirdNest$Length,BirdNest$Incubate)
inUrl1  <- "https://pasta.lternet.edu/package/data/eml/knb-lter-hbr/208/8/63721bdf79b4f216641340332f4fbec2"
infile1 <- tempfile()
try(download.file(inUrl1,infile1,method="curl"))
if (is.na(file.size(infile1))) download.file(inUrl1,infile1,method="auto")
dt1 <-read.csv(infile1,header=F
,skip=1
,sep=","
,quot='"'
, col.names=c(
"site",
"date",
"timeEST",
"barcode",
"pH",
"DIC",
"spCond",
"temp",
"ANC960",
"ANCMet",
"precipCatch",
"fieldCode",
"notes",
"uniqueID",
"waterYr",
"Ca",
"Mg",
"K",
"Na",
"TMAl",
"OMAl",
"Al_ICP",
"Al_ferron",
"NH4",
"SO4",
"NO3",
"Cl",
"PO4",
"DOC",
"TDN",
"DON",
"SiO2",
"Mn",
"Fe",
"F",
"cationCharge",
"anionCharge",
"ionError",
"duplicate",
"sampleType",
"ionBalance",
"canonical",
"pHmetrohm"    ), check.names=TRUE)
unlink(infile1)
if (class(dt1$site)!="factor") dt1$site<- as.factor(dt1$site)
# attempting to convert dt1$date dateTime string to R date structure (date or POSIXct)
tmpDateFormat<-"%Y-%m-%d"
tmp1date<-as.Date(dt1$date,format=tmpDateFormat)
# Keep the new dates only if they all converted correctly
if(length(tmp1date) == length(tmp1date[!is.na(tmp1date)])){dt1$date <- tmp1date } else {print("Date conversion failed for dt1$date. Please inspect the data and do the date conversion yourself.")}
rm(tmpDateFormat,tmp1date)
if (class(dt1$barcode)!="factor") dt1$barcode<- as.factor(dt1$barcode)
if (class(dt1$pH)=="factor") dt1$pH <-as.numeric(levels(dt1$pH))[as.integer(dt1$pH) ]
if (class(dt1$pH)=="character") dt1$pH <-as.numeric(dt1$pH)
if (class(dt1$DIC)=="factor") dt1$DIC <-as.numeric(levels(dt1$DIC))[as.integer(dt1$DIC) ]
if (class(dt1$DIC)=="character") dt1$DIC <-as.numeric(dt1$DIC)
if (class(dt1$spCond)=="factor") dt1$spCond <-as.numeric(levels(dt1$spCond))[as.integer(dt1$spCond) ]
if (class(dt1$spCond)=="character") dt1$spCond <-as.numeric(dt1$spCond)
if (class(dt1$temp)=="factor") dt1$temp <-as.numeric(levels(dt1$temp))[as.integer(dt1$temp) ]
if (class(dt1$temp)=="character") dt1$temp <-as.numeric(dt1$temp)
if (class(dt1$ANC960)=="factor") dt1$ANC960 <-as.numeric(levels(dt1$ANC960))[as.integer(dt1$ANC960) ]
if (class(dt1$ANC960)=="character") dt1$ANC960 <-as.numeric(dt1$ANC960)
if (class(dt1$ANCMet)=="factor") dt1$ANCMet <-as.numeric(levels(dt1$ANCMet))[as.integer(dt1$ANCMet) ]
if (class(dt1$ANCMet)=="character") dt1$ANCMet <-as.numeric(dt1$ANCMet)
if (class(dt1$precipCatch)=="factor") dt1$precipCatch <-as.numeric(levels(dt1$precipCatch))[as.integer(dt1$precipCatch) ]
if (class(dt1$precipCatch)=="character") dt1$precipCatch <-as.numeric(dt1$precipCatch)
if (class(dt1$fieldCode)!="factor") dt1$fieldCode<- as.factor(dt1$fieldCode)
if (class(dt1$notes)!="factor") dt1$notes<- as.factor(dt1$notes)
if (class(dt1$uniqueID)!="factor") dt1$uniqueID<- as.factor(dt1$uniqueID)
if (class(dt1$Ca)=="factor") dt1$Ca <-as.numeric(levels(dt1$Ca))[as.integer(dt1$Ca) ]
if (class(dt1$Ca)=="character") dt1$Ca <-as.numeric(dt1$Ca)
if (class(dt1$Mg)=="factor") dt1$Mg <-as.numeric(levels(dt1$Mg))[as.integer(dt1$Mg) ]
if (class(dt1$Mg)=="character") dt1$Mg <-as.numeric(dt1$Mg)
if (class(dt1$K)=="factor") dt1$K <-as.numeric(levels(dt1$K))[as.integer(dt1$K) ]
if (class(dt1$K)=="character") dt1$K <-as.numeric(dt1$K)
if (class(dt1$Na)=="factor") dt1$Na <-as.numeric(levels(dt1$Na))[as.integer(dt1$Na) ]
if (class(dt1$Na)=="character") dt1$Na <-as.numeric(dt1$Na)
if (class(dt1$TMAl)=="factor") dt1$TMAl <-as.numeric(levels(dt1$TMAl))[as.integer(dt1$TMAl) ]
if (class(dt1$TMAl)=="character") dt1$TMAl <-as.numeric(dt1$TMAl)
if (class(dt1$OMAl)=="factor") dt1$OMAl <-as.numeric(levels(dt1$OMAl))[as.integer(dt1$OMAl) ]
if (class(dt1$OMAl)=="character") dt1$OMAl <-as.numeric(dt1$OMAl)
if (class(dt1$Al_ICP)=="factor") dt1$Al_ICP <-as.numeric(levels(dt1$Al_ICP))[as.integer(dt1$Al_ICP) ]
if (class(dt1$Al_ICP)=="character") dt1$Al_ICP <-as.numeric(dt1$Al_ICP)
if (class(dt1$Al_ferron)=="factor") dt1$Al_ferron <-as.numeric(levels(dt1$Al_ferron))[as.integer(dt1$Al_ferron) ]
if (class(dt1$Al_ferron)=="character") dt1$Al_ferron <-as.numeric(dt1$Al_ferron)
if (class(dt1$NH4)=="factor") dt1$NH4 <-as.numeric(levels(dt1$NH4))[as.integer(dt1$NH4) ]
if (class(dt1$NH4)=="character") dt1$NH4 <-as.numeric(dt1$NH4)
if (class(dt1$SO4)=="factor") dt1$SO4 <-as.numeric(levels(dt1$SO4))[as.integer(dt1$SO4) ]
if (class(dt1$SO4)=="character") dt1$SO4 <-as.numeric(dt1$SO4)
if (class(dt1$NO3)=="factor") dt1$NO3 <-as.numeric(levels(dt1$NO3))[as.integer(dt1$NO3) ]
if (class(dt1$NO3)=="character") dt1$NO3 <-as.numeric(dt1$NO3)
if (class(dt1$Cl)=="factor") dt1$Cl <-as.numeric(levels(dt1$Cl))[as.integer(dt1$Cl) ]
if (class(dt1$Cl)=="character") dt1$Cl <-as.numeric(dt1$Cl)
if (class(dt1$PO4)=="factor") dt1$PO4 <-as.numeric(levels(dt1$PO4))[as.integer(dt1$PO4) ]
if (class(dt1$PO4)=="character") dt1$PO4 <-as.numeric(dt1$PO4)
if (class(dt1$DOC)=="factor") dt1$DOC <-as.numeric(levels(dt1$DOC))[as.integer(dt1$DOC) ]
if (class(dt1$DOC)=="character") dt1$DOC <-as.numeric(dt1$DOC)
if (class(dt1$TDN)=="factor") dt1$TDN <-as.numeric(levels(dt1$TDN))[as.integer(dt1$TDN) ]
if (class(dt1$TDN)=="character") dt1$TDN <-as.numeric(dt1$TDN)
if (class(dt1$DON)=="factor") dt1$DON <-as.numeric(levels(dt1$DON))[as.integer(dt1$DON) ]
if (class(dt1$DON)=="character") dt1$DON <-as.numeric(dt1$DON)
if (class(dt1$SiO2)=="factor") dt1$SiO2 <-as.numeric(levels(dt1$SiO2))[as.integer(dt1$SiO2) ]
if (class(dt1$SiO2)=="character") dt1$SiO2 <-as.numeric(dt1$SiO2)
if (class(dt1$Mn)=="factor") dt1$Mn <-as.numeric(levels(dt1$Mn))[as.integer(dt1$Mn) ]
if (class(dt1$Mn)=="character") dt1$Mn <-as.numeric(dt1$Mn)
if (class(dt1$Fe)=="factor") dt1$Fe <-as.numeric(levels(dt1$Fe))[as.integer(dt1$Fe) ]
if (class(dt1$Fe)=="character") dt1$Fe <-as.numeric(dt1$Fe)
if (class(dt1$F)=="factor") dt1$F <-as.numeric(levels(dt1$F))[as.integer(dt1$F) ]
if (class(dt1$F)=="character") dt1$F <-as.numeric(dt1$F)
if (class(dt1$cationCharge)=="factor") dt1$cationCharge <-as.numeric(levels(dt1$cationCharge))[as.integer(dt1$cationCharge) ]
if (class(dt1$cationCharge)=="character") dt1$cationCharge <-as.numeric(dt1$cationCharge)
if (class(dt1$anionCharge)=="factor") dt1$anionCharge <-as.numeric(levels(dt1$anionCharge))[as.integer(dt1$anionCharge) ]
if (class(dt1$anionCharge)=="character") dt1$anionCharge <-as.numeric(dt1$anionCharge)
if (class(dt1$ionError)=="factor") dt1$ionError <-as.numeric(levels(dt1$ionError))[as.integer(dt1$ionError) ]
if (class(dt1$ionError)=="character") dt1$ionError <-as.numeric(dt1$ionError)
if (class(dt1$duplicate)!="factor") dt1$duplicate<- as.factor(dt1$duplicate)
if (class(dt1$sampleType)!="factor") dt1$sampleType<- as.factor(dt1$sampleType)
if (class(dt1$ionBalance)=="factor") dt1$ionBalance <-as.numeric(levels(dt1$ionBalance))[as.integer(dt1$ionBalance) ]
if (class(dt1$ionBalance)=="character") dt1$ionBalance <-as.numeric(dt1$ionBalance)
if (class(dt1$canonical)!="factor") dt1$canonical<- as.factor(dt1$canonical)
if (class(dt1$pHmetrohm)=="factor") dt1$pHmetrohm <-as.numeric(levels(dt1$pHmetrohm))[as.integer(dt1$pHmetrohm) ]
if (class(dt1$pHmetrohm)=="character") dt1$pHmetrohm <-as.numeric(dt1$pHmetrohm)
dt1$site <- as.factor(ifelse((trimws(as.character(dt1$site))==trimws("NA")),NA,as.character(dt1$site)))
dt1$barcode <- as.factor(ifelse((trimws(as.character(dt1$barcode))==trimws("NA")),NA,as.character(dt1$barcode)))
dt1$pH <- ifelse((trimws(as.character(dt1$pH))==trimws("NA")),NA,dt1$pH)
suppressWarnings(dt1$pH <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$pH))==as.character(as.numeric("NA"))),NA,dt1$pH))
dt1$DIC <- ifelse((trimws(as.character(dt1$DIC))==trimws("NA")),NA,dt1$DIC)
suppressWarnings(dt1$DIC <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$DIC))==as.character(as.numeric("NA"))),NA,dt1$DIC))
dt1$spCond <- ifelse((trimws(as.character(dt1$spCond))==trimws("NA")),NA,dt1$spCond)
suppressWarnings(dt1$spCond <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$spCond))==as.character(as.numeric("NA"))),NA,dt1$spCond))
dt1$temp <- ifelse((trimws(as.character(dt1$temp))==trimws("NA")),NA,dt1$temp)
suppressWarnings(dt1$temp <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$temp))==as.character(as.numeric("NA"))),NA,dt1$temp))
dt1$ANC960 <- ifelse((trimws(as.character(dt1$ANC960))==trimws("NA")),NA,dt1$ANC960)
suppressWarnings(dt1$ANC960 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$ANC960))==as.character(as.numeric("NA"))),NA,dt1$ANC960))
dt1$ANCMet <- ifelse((trimws(as.character(dt1$ANCMet))==trimws("NA")),NA,dt1$ANCMet)
suppressWarnings(dt1$ANCMet <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$ANCMet))==as.character(as.numeric("NA"))),NA,dt1$ANCMet))
dt1$precipCatch <- ifelse((trimws(as.character(dt1$precipCatch))==trimws("NA")),NA,dt1$precipCatch)
suppressWarnings(dt1$precipCatch <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$precipCatch))==as.character(as.numeric("NA"))),NA,dt1$precipCatch))
dt1$fieldCode <- as.factor(ifelse((trimws(as.character(dt1$fieldCode))==trimws("NA")),NA,as.character(dt1$fieldCode)))
dt1$notes <- as.factor(ifelse((trimws(as.character(dt1$notes))==trimws("NA")),NA,as.character(dt1$notes)))
dt1$uniqueID <- as.factor(ifelse((trimws(as.character(dt1$uniqueID))==trimws("NA")),NA,as.character(dt1$uniqueID)))
dt1$Ca <- ifelse((trimws(as.character(dt1$Ca))==trimws("NA")),NA,dt1$Ca)
suppressWarnings(dt1$Ca <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Ca))==as.character(as.numeric("NA"))),NA,dt1$Ca))
dt1$Mg <- ifelse((trimws(as.character(dt1$Mg))==trimws("NA")),NA,dt1$Mg)
suppressWarnings(dt1$Mg <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Mg))==as.character(as.numeric("NA"))),NA,dt1$Mg))
dt1$K <- ifelse((trimws(as.character(dt1$K))==trimws("NA")),NA,dt1$K)
suppressWarnings(dt1$K <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$K))==as.character(as.numeric("NA"))),NA,dt1$K))
dt1$Na <- ifelse((trimws(as.character(dt1$Na))==trimws("NA")),NA,dt1$Na)
suppressWarnings(dt1$Na <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Na))==as.character(as.numeric("NA"))),NA,dt1$Na))
dt1$TMAl <- ifelse((trimws(as.character(dt1$TMAl))==trimws("NA")),NA,dt1$TMAl)
suppressWarnings(dt1$TMAl <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$TMAl))==as.character(as.numeric("NA"))),NA,dt1$TMAl))
dt1$OMAl <- ifelse((trimws(as.character(dt1$OMAl))==trimws("NA")),NA,dt1$OMAl)
suppressWarnings(dt1$OMAl <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$OMAl))==as.character(as.numeric("NA"))),NA,dt1$OMAl))
dt1$Al_ICP <- ifelse((trimws(as.character(dt1$Al_ICP))==trimws("NA")),NA,dt1$Al_ICP)
suppressWarnings(dt1$Al_ICP <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Al_ICP))==as.character(as.numeric("NA"))),NA,dt1$Al_ICP))
dt1$Al_ferron <- ifelse((trimws(as.character(dt1$Al_ferron))==trimws("NA")),NA,dt1$Al_ferron)
suppressWarnings(dt1$Al_ferron <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Al_ferron))==as.character(as.numeric("NA"))),NA,dt1$Al_ferron))
dt1$NH4 <- ifelse((trimws(as.character(dt1$NH4))==trimws("NA")),NA,dt1$NH4)
suppressWarnings(dt1$NH4 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$NH4))==as.character(as.numeric("NA"))),NA,dt1$NH4))
dt1$SO4 <- ifelse((trimws(as.character(dt1$SO4))==trimws("NA")),NA,dt1$SO4)
suppressWarnings(dt1$SO4 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$SO4))==as.character(as.numeric("NA"))),NA,dt1$SO4))
dt1$NO3 <- ifelse((trimws(as.character(dt1$NO3))==trimws("NA")),NA,dt1$NO3)
suppressWarnings(dt1$NO3 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$NO3))==as.character(as.numeric("NA"))),NA,dt1$NO3))
dt1$Cl <- ifelse((trimws(as.character(dt1$Cl))==trimws("NA")),NA,dt1$Cl)
suppressWarnings(dt1$Cl <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Cl))==as.character(as.numeric("NA"))),NA,dt1$Cl))
dt1$PO4 <- ifelse((trimws(as.character(dt1$PO4))==trimws("NA")),NA,dt1$PO4)
suppressWarnings(dt1$PO4 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$PO4))==as.character(as.numeric("NA"))),NA,dt1$PO4))
dt1$DOC <- ifelse((trimws(as.character(dt1$DOC))==trimws("NA")),NA,dt1$DOC)
suppressWarnings(dt1$DOC <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$DOC))==as.character(as.numeric("NA"))),NA,dt1$DOC))
dt1$TDN <- ifelse((trimws(as.character(dt1$TDN))==trimws("NA")),NA,dt1$TDN)
suppressWarnings(dt1$TDN <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$TDN))==as.character(as.numeric("NA"))),NA,dt1$TDN))
dt1$DON <- ifelse((trimws(as.character(dt1$DON))==trimws("NA")),NA,dt1$DON)
suppressWarnings(dt1$DON <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$DON))==as.character(as.numeric("NA"))),NA,dt1$DON))
dt1$SiO2 <- ifelse((trimws(as.character(dt1$SiO2))==trimws("NA")),NA,dt1$SiO2)
suppressWarnings(dt1$SiO2 <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$SiO2))==as.character(as.numeric("NA"))),NA,dt1$SiO2))
dt1$Mn <- ifelse((trimws(as.character(dt1$Mn))==trimws("NA")),NA,dt1$Mn)
suppressWarnings(dt1$Mn <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Mn))==as.character(as.numeric("NA"))),NA,dt1$Mn))
dt1$Fe <- ifelse((trimws(as.character(dt1$Fe))==trimws("NA")),NA,dt1$Fe)
suppressWarnings(dt1$Fe <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$Fe))==as.character(as.numeric("NA"))),NA,dt1$Fe))
dt1$F <- ifelse((trimws(as.character(dt1$F))==trimws("NA")),NA,dt1$F)
suppressWarnings(dt1$F <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$F))==as.character(as.numeric("NA"))),NA,dt1$F))
dt1$cationCharge <- ifelse((trimws(as.character(dt1$cationCharge))==trimws("NA")),NA,dt1$cationCharge)
suppressWarnings(dt1$cationCharge <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$cationCharge))==as.character(as.numeric("NA"))),NA,dt1$cationCharge))
dt1$anionCharge <- ifelse((trimws(as.character(dt1$anionCharge))==trimws("NA")),NA,dt1$anionCharge)
suppressWarnings(dt1$anionCharge <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$anionCharge))==as.character(as.numeric("NA"))),NA,dt1$anionCharge))
dt1$ionError <- ifelse((trimws(as.character(dt1$ionError))==trimws("NA")),NA,dt1$ionError)
suppressWarnings(dt1$ionError <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$ionError))==as.character(as.numeric("NA"))),NA,dt1$ionError))
dt1$duplicate <- as.factor(ifelse((trimws(as.character(dt1$duplicate))==trimws("NA")),NA,as.character(dt1$duplicate)))
dt1$sampleType <- as.factor(ifelse((trimws(as.character(dt1$sampleType))==trimws("NA")),NA,as.character(dt1$sampleType)))
dt1$ionBalance <- ifelse((trimws(as.character(dt1$ionBalance))==trimws("NA")),NA,dt1$ionBalance)
suppressWarnings(dt1$ionBalance <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$ionBalance))==as.character(as.numeric("NA"))),NA,dt1$ionBalance))
dt1$canonical <- as.factor(ifelse((trimws(as.character(dt1$canonical))==trimws("NA")),NA,as.character(dt1$canonical)))
dt1$pHmetrohm <- ifelse((trimws(as.character(dt1$pHmetrohm))==trimws("NA")),NA,dt1$pHmetrohm)
suppressWarnings(dt1$pHmetrohm <- ifelse(!is.na(as.numeric("NA")) & (trimws(as.character(dt1$pHmetrohm))==as.character(as.numeric("NA"))),NA,dt1$pHmetrohm))
str(dt1)
attach(dt1)
summary(site)
summary(date)
summary(timeEST)
summary(barcode)
summary(pH)
summary(DIC)
summary(spCond)
summary(temp)
summary(ANC960)
summary(ANCMet)
summary(precipCatch)
summary(fieldCode)
summary(notes)
summary(uniqueID)
summary(waterYr)
summary(Ca)
summary(Mg)
summary(K)
summary(Na)
summary(TMAl)
summary(OMAl)
summary(Al_ICP)
summary(Al_ferron)
summary(NH4)
summary(SO4)
summary(NO3)
summary(Cl)
summary(PO4)
summary(DOC)
summary(TDN)
summary(DON)
summary(SiO2)
summary(Mn)
summary(Fe)
summary(F)
summary(cationCharge)
summary(anionCharge)
summary(ionError)
summary(duplicate)
summary(sampleType)
summary(ionBalance)
summary(canonical)
summary(pHmetrohm)
# Get more details on character variables
summary(as.factor(dt1$site))
summary(as.factor(dt1$barcode))
summary(as.factor(dt1$fieldCode))
summary(as.factor(dt1$notes))
summary(as.factor(dt1$uniqueID))
summary(as.factor(dt1$duplicate))
summary(as.factor(dt1$sampleType))
summary(as.factor(dt1$canonical))
names(dt1)
head(dt1$SO4)
plot(dt1$NO3)
lm(dt1$NO3)
library(readxl)
Young_et_al_Data <- read_excel("Desktop/Young_et_al_Data.xlsx")
View(Young_et_al_Data)
d$alb.x = d$alb.x/1000
d$alb.y = d$alb.y/1000
d$year <- as.character(d$year)
setwd("~/Desktop")
d = read.csv("Young_et_al_Data.csv") # In this dataset, each row represents a specific raster cell in a specific year. See metadata associated with this data file on Dryad
library(readr)
Newt_HSI <- read_csv("Newt HSI.csv")
View(Newt_HSI)
plot(Newt_HSI$area,Newt_HSI$presence)
plot(Newt_HSI$shade,Newt_HSI$presence)
plot(Newt_HSI$HSI,Newt_HSI$presence)
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16)
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2)
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(1,1,1,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0,0,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.2,0.2,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.3,0.3,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.3,0.4,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.7,0.4,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.6,0.4,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.55,0.4,0.5))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.55,0.4,0.1))
plot(Newt_HSI$HSI,Newt_HSI$presence,pch=16,cex=2,col=rgb(0,0.55,0.4,0.2))
?read.csv
library(readr)
Challenger_data <- read_csv("~/Documents/Projects/Biometry2023/_data/Challenger_data.csv")
View(Challenger_data)
plot(Challenger_data$Temp,Challenger_data$O.ring.failure,pch=16,cex=2,col=rgb(0,0.55,0.4,0.2))
plot(Challenger_data$Temp,Challenger_data$O.ring.failure,pch=16,cex=2,col=rgb(0,0.55,0.4,0.3))
plot(Challenger_data$Temp,Challenger_data$O.ring.failure,pch=16,cex=2,col=rgb(0,0.55,0.4,0.4))
plot(Challenger_data$Temp,Challenger_data$O.ring.failure,pch=16,cex=2,col=rgb(0,0.55,0.4,0.6))
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
getwd()
bookdown::render_book("index.Rmd")
Challenger_data <- read.csv("~/_data/Challenger_data.csv")
setwd("~/_data/Documents/Projects/Biometry2023/")
setwd("~/Documents/Projects/Biometry2023/")
getwd()
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
Challenger_data <- read.csv("~/Documents/Projects/Biometry2023/Challenger_data.csv")
Challenger_data <- read.csv("~/Documents/Projects/Biometry2023/_data/Challenger_data.csv")
setwd("~/Documents/Projects/Biometry2023/")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
700/20
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
75*5
(10/25)*20
(25/10)*20
(25/10)*20*2
distances<-c(10, 25, 30, 50, 75, 100, 125, 150, 175, 200, 250, 300, 400, 500)
(25/10)*distances*2
grades<-c(198,150.5,154.5,160,61.5,95.5,44,145.5,80,135,113.5,116,148.5,102.5,94,67,122.5,130,85,125.5,121,110.5,121)
length(grades)
mean(grades)
hist(grades)
hist(grades+40)
hist((grades+40)/200)
hist((grades+40)/200,breaks=30)
hist((grades+45)/200,breaks=30)
hist((grades*1.2)/200,breaks=30)
hist((grades*1.4)/200,breaks=30)
hist((grades+45)/200,breaks=30)
hist((grades*1.4)/200,breaks=30)
hist((grades+45)/200,breaks=30)
means((grades+45)/200)
mean((grades+45)/200)
mean((grades+50)/200)
hist((grades+50)/200,breaks=30)
mean((grades+47)/200)
5+12.5+6+4+10+20+6+15+3+20+25+16
5+12.5+6+4+10+20+6+15+3+20+25+16+47
setwd("~/Documents/Projects/Biometry2023")
data<-read.table("_data/fish.txt",header=T)
head(data)
data.bootstrap<-data.bootstrap
Station.bootstrap<-data.bootstrap$STATION
Mercury.bootstrap<-data.bootstrap$MERCURY
data.bootstrap<-data
Station.bootstrap<-data.bootstrap$STATION
Mercury.bootstrap<-data.bootstrap$MERCURY
sample(Mercury.bootstrap[Station.bootstrap=="0"],length(Mercury.bootstrap[Station.bootstrap=="0"]),replace=T)
sample(Mercury.bootstrap[Station.bootstrap=="0"],length(Mercury.bootstrap[Station.bootstrap=="0"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="0"]<-sample(Mercury.bootstrap[Station.bootstrap=="0"],length(Mercury.bootstrap[Station.bootstrap=="0"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="1"]<-sample(Mercury.bootstrap[Station.bootstrap=="1"],length(Mercury.bootstrap[Station.bootstrap=="1"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="2"]<-sample(Mercury.bootstrap[Station.bootstrap=="2"],length(Mercury.bootstrap[Station.bootstrap=="2"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="3"]<-sample(Mercury.bootstrap[Station.bootstrap=="3"],length(Mercury.bootstrap[Station.bootstrap=="3"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="4"]<-sample(Mercury.bootstrap[Station.bootstrap=="4"],length(Mercury.bootstrap[Station.bootstrap=="4"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="5"]<-sample(Mercury.bootstrap[Station.bootstrap=="5"],length(Mercury.bootstrap[Station.bootstrap=="5"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="6"]<-sample(Mercury.bootstrap[Station.bootstrap=="6"],length(Mercury.bootstrap[Station.bootstrap=="6"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="7"]<-sample(Mercury.bootstrap[Station.bootstrap=="7"],length(Mercury.bootstrap[Station.bootstrap=="7"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="8"]<-sample(Mercury.bootstrap[Station.bootstrap=="8"],length(Mercury.bootstrap[Station.bootstrap=="8"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="9"]<-sample(Mercury.bootstrap[Station.bootstrap=="9"],length(Mercury.bootstrap[Station.bootstrap=="9"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="10"]<-sample(Mercury.bootstrap[Station.bootstrap=="10"],length(Mercury.bootstrap[Station.bootstrap=="10"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="11"]<-sample(Mercury.bootstrap[Station.bootstrap=="11"],length(Mercury.bootstrap[Station.bootstrap=="11"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="12"]<-sample(Mercury.bootstrap[Station.bootstrap=="12"],length(Mercury.bootstrap[Station.bootstrap=="12"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="13"]<-sample(Mercury.bootstrap[Station.bootstrap=="13"],length(Mercury.bootstrap[Station.bootstrap=="13"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="14"]<-sample(Mercury.bootstrap[Station.bootstrap=="14"],length(Mercury.bootstrap[Station.bootstrap=="14"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="15"]<-sample(Mercury.bootstrap[Station.bootstrap=="15"],length(Mercury.bootstrap[Station.bootstrap=="15"]),replace=T)
fit.bs<-lm(Mercury.bootstrap~Station.bootstrap-1)
summary(fit.bs)
plot(Station.bootstrap, Mercury.bootstrap,cex=1,xlab="Station as a numeric",ylab="Mercury")
abline(a=coef(fit.bs)[1],b=coef(fit.bs)[2],col="red")
coef(fit.bs)[1]
coef(fit.bs)[2]
fit.bs<-lm(Mercury.bootstrap~as.factor(Station.bootstrap))
summary(fit.bs)
plot(Station.bootstrap, Mercury.bootstrap,cex=1,xlab="Station as a numeric",ylab="Mercury")
abline(a=coef(fit.bs)[1],b=coef(fit.bs)[2],col="red")
fit.bs<-lm(Mercury.bootstrap~Station.bootstrap)
summary(fit.bs)
plot(Station.bootstrap, Mercury.bootstrap,cex=1,xlab="Station as a numeric",ylab="Mercury")
abline(a=coef(fit.bs)[1],b=coef(fit.bs)[2],col="red")
fit.bs<-lm(Mercury.bootstrap~Station.bootstrap-1)
coef(fit.bs)
summary(fit.bs)
fit.bs<-lm(Mercury.bootstrap~Station.bootstrap)
summary(fit.bs)
fit.bs<-lm(Mercury.bootstrap~Station.bootstrap-1)
summary(fit.bs)
fit.bs
fit.bs<-lm(Mercury.bootstrap~as.factor(Station.bootstrap)-1)
fit.bs
station0.est<-c()
for (i in 1:1000)
{
data.bootstrap<-data
Station.bootstrap<-data.bootstrap$STATION
Mercury.bootstrap<-data.bootstrap$MERCURY
Mercury.bootstrap[Station.bootstrap=="0"]<-sample(Mercury.bootstrap[Station.bootstrap=="0"],length(Mercury.bootstrap[Station.bootstrap=="0"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="1"]<-sample(Mercury.bootstrap[Station.bootstrap=="1"],length(Mercury.bootstrap[Station.bootstrap=="1"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="2"]<-sample(Mercury.bootstrap[Station.bootstrap=="2"],length(Mercury.bootstrap[Station.bootstrap=="2"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="3"]<-sample(Mercury.bootstrap[Station.bootstrap=="3"],length(Mercury.bootstrap[Station.bootstrap=="3"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="4"]<-sample(Mercury.bootstrap[Station.bootstrap=="4"],length(Mercury.bootstrap[Station.bootstrap=="4"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="5"]<-sample(Mercury.bootstrap[Station.bootstrap=="5"],length(Mercury.bootstrap[Station.bootstrap=="5"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="6"]<-sample(Mercury.bootstrap[Station.bootstrap=="6"],length(Mercury.bootstrap[Station.bootstrap=="6"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="7"]<-sample(Mercury.bootstrap[Station.bootstrap=="7"],length(Mercury.bootstrap[Station.bootstrap=="7"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="8"]<-sample(Mercury.bootstrap[Station.bootstrap=="8"],length(Mercury.bootstrap[Station.bootstrap=="8"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="9"]<-sample(Mercury.bootstrap[Station.bootstrap=="9"],length(Mercury.bootstrap[Station.bootstrap=="9"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="10"]<-sample(Mercury.bootstrap[Station.bootstrap=="10"],length(Mercury.bootstrap[Station.bootstrap=="10"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="11"]<-sample(Mercury.bootstrap[Station.bootstrap=="11"],length(Mercury.bootstrap[Station.bootstrap=="11"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="12"]<-sample(Mercury.bootstrap[Station.bootstrap=="12"],length(Mercury.bootstrap[Station.bootstrap=="12"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="13"]<-sample(Mercury.bootstrap[Station.bootstrap=="13"],length(Mercury.bootstrap[Station.bootstrap=="13"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="14"]<-sample(Mercury.bootstrap[Station.bootstrap=="14"],length(Mercury.bootstrap[Station.bootstrap=="14"]),replace=T)
Mercury.bootstrap[Station.bootstrap=="15"]<-sample(Mercury.bootstrap[Station.bootstrap=="15"],length(Mercury.bootstrap[Station.bootstrap=="15"]),replace=T)
fit.bs<-lm(Mercury.bootstrap~as.factor(Station.bootstrap)-1)
station0.est<-c(station0.est,coef(fit.bs)[1])
}
hist(station0.est)
sd(station0.est)
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
