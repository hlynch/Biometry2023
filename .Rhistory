}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
k
num.iterations<-1000
correlations.scores<-vector(length=num.iterations)
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=5),rep(0,times=nrow(prepared_ADPE)-5))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:36)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
i
k
trend<-matrix(nrow=num.iterations,ncol=36)
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=5),rep(0,times=nrow(prepared_ADPE)-5))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:36)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
hist(correlations.scores)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
hist(correlations.scores,breaks=30)
59-20
2019-1980
window.length<-5
portfolio.size<-10
trend.all<-vector(length=39-window.length+2)
selected<-c(rep(1,times=nrow(prepared_ADPE)-portfolio.size)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-10
trend.all<-vector(length=39-window.length+2)
selected<-c(rep(1,times=nrow(prepared_ADPE)-portfolio.size))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-10
trend.all<-vector(length=39-window.length+2)
selected<-c(rep(1,times=(nrow(prepared_ADPE)-portfolio.size)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=(nrow(prepared_ADPE)-portfolio.size)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
plot(trend.all)
num.iterations<-10
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
trend
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
num.iterations<-10
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
num.iterations<-1000
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
?combn
combn(letters[1:4], 2)
combn(ADPE.time.series, 5)
combn(ADPE.time.series[1:5], 2)
temp<-combn(ADPE.time.series[1:5], 2)
dim(temp)
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,1]]
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,1],]
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,2],]
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
num.iterations
for (k in 1:5)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
trend
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
k
dim(Combinations)
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%ADPE.time.series[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
hist(correlations.scores)
hist(correlations.scores,breaks=30)
prepared_ADPE[best.selected==1,]
head(combinations)
head(Combinations)
head(Combinations[,1:5])
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) k.best<-k
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T))
{
k.best<-k
print(k)
}
}
k
dim(Combinations)
k.best
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e5))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
correlation.scores[k.best]
correlations.scores[k.best]
prepared_ADPE$Site_ID%in%Combinations[,k.best]
aggregated_abundance_all_selected/aggregated_abundance_all
aggregated_abundance_all_selected
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[,20:59]%>%
summarise_all(sum)
aggregated_abundance_all_selected/aggregated_abundance_all
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e5))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,1.2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
prepared_ADPE <- read_csv("Desktop/prepared_ADPE.csv")
prepared_ADPE_long<-prepared_ADPE[prepared_ADPE$Site_ID%in%ADPE.time.series,]
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- prepared_ADPE[,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
plot(trend.all)
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE_long[prepared_ADPE_long$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T))
{
k.best<-k
print(k)
}
}
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,1.2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
aggregated_abundance_all
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,3e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,5e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,6e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1.5e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
hist(correlations.scores)
max(correlations.scores,na.rm=T)
=5.68/2.15
5.68/2.15
5.407/1.42
library(readr)
Vessel_data <- read_csv("Dropbox/Biometry/Week 9 Correlation and regression/Week 9 Problem set/Vessel_data.csv")
View(Vessel_data)
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model.actual<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
coef.beta0<-c()
coef.beta1<-c()
for (i in 1:1000) #feel free to choose a different number here
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.2)) #what is the rgb function doing for me here?
coef.beta0<-c(coef.beta0,coef(nls.model)[1])
coef.beta1<-c(coef.beta1,coef(nls.model)[2])
}
lines(x.vals,coef(nls.model.actual)[1]+(coef(nls.model.actual)[2])*x.vals,col="red",lwd=2)
plot(coef.beta0,coef.beta1)
hist(beta1)
hist(coef.beta1)
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
270/5
?glm
plot(rmvnorm(100,c(0,0),c(1,0,0,1)))
?mvnorm
plot(mvrnorm(100,c(0,0),c(1,0,0,1)))
library(MASS)
plot(mvrnorm(100,c(0,0),c(1,0,0,1)))
?mvrnorm
plot(mvrnorm(100,c(0,0),matrix(c(1,0,0,1),2,2)))
plot(mvrnorm(100,c(0,0),matrix(c(1,0,0,1),2,2)),pch=10)
plot(mvrnorm(100,c(0,0),matrix(c(1,0,0,1),2,2)),pch=16)
plot(mvrnorm(100,c(0,0),matrix(c(1,0,0,1),2,2)),pch=16,xlab="C",ylab="Y")
plot(mvrnorm(100,c(0,0),matrix(c(1,0,0,1),2,2)),pch=16,xlab="C",ylab="Y",cex=2)
plot(mvrnorm(100,c(0,0),matrix(c(1,0,0,1),2,2)),pch=16,xlab="C",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(mvrnorm(100,c(0,0),matrix(c(1,0.1,0.1,1),2,2)),pch=16,xlab="C",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(mvrnorm(100,c(0,0),matrix(c(1,0.2,0.2,1),2,2)),pch=16,xlab="C",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(mvrnorm(100,c(0,0),matrix(c(1,0.5,0.5,1),2,2)),pch=16,xlab="C",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(mvrnorm(100,c(0,0),matrix(c(1,-0.4,-0.4,1),2,2)),pch=16,xlab="C",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(mvrnorm(100,c(0,0),matrix(c(1,-0.6,-0.6,1),2,2)),pch=16,xlab="C",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(mvrnorm(100,c(0,0),matrix(c(1,-0.6,-0.6,1),2,2)),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
A <- rnorm(n = 100, mean = 0, sd = 2)
A <- A[order(A)]
A^2+mvrnorm(100,c(0,0)+matrix(c(1,-0.6,-0.6,1),2,2))
plot(A^2+mvrnorm(100,c(0,0),matrix(c(1,-0.6,-0.6,1),2,2)),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^2+mvrnorm(100,c(0,0),matrix(c(1,-0.6,-0.6,1),2,2)),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
length(A)
length(A^2)
length(mvrnorm(100,c(0,0),matrix(c(1,-0.6,-0.6,1),2,2)))
plot(A,A^2+mvrnorm(100,c(A,0),matrix(c(1,-0.6,-0.6,1),2,2))[2],pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^2+rnorm(100,0,1),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^(1/2)+rnorm(100,0,1),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^(1.3)+rnorm(100,0,1),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^(2)+rnorm(100,0,3),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^(2)+rnorm(100,0,3),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^(2)+rnorm(100,0,3),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^(2)+rnorm(100,0,3),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,A^(2)+rnorm(100,0,3),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
A <- rnorm(n = 100, mean = 0, sd = 2)
A <- A[order(A)]
plot(A,A^(2)+rnorm(100,0,3),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
A <- rnorm(n = 100, mean = 0, sd = 2)
plot(A,c(rep(0,50),rep(1,50)),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
A <- A[order(A)]
plot(A,c(rep(0,50),rep(1,50)),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
plot(A,c(rep(-0.2,10),rep(0.2,40),rep(1,50)),pch=16,xlab="X",ylab="Y",cex=2,col=rgb(0,0,0,0.5))
cor.test(A,c(rep(-0.2,10),rep(0.2,40),rep(1,50)))
