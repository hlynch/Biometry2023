lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
hist(correlations.scores)
max(correlations.scores,na.rm=T)
=5.68/2.15
5.68/2.15
5.407/1.42
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
?nls
library(readr)
Vessel_data <- read_csv("~/Dropbox/Biometry/Week 9 Correlation and regression/Week 9 Problem set/Vessel_data.csv")
View(Vessel_data)
head(Vessel_data)
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
summary(lm(df$MaxSpeed~df$Length))
nls.model
302.1/74
sqrt(302.1/74)
plot(df$Length,df$MaxSpeed)
nls.model$m
nls.model$convInfo
nls.model$control
nls.model$data
nls.model$call
nls.model$na.action
coef(nls.control())
coef(nls.model
)
coef(nls.model)[1]
coef(nls.model)$beta0
coef(nls.model)$beta0lines(seq(min(df$Length),max(df$Length),1),coef(nls.model)[1]+coef(nls.model)[2]*seq(min(df$Length),max(df$Length),1))
lines(seq(min(df$Length),max(df$Length),1),coef(nls.model)[1]+(coef(nls.model)[2])*seq(min(df$Length),max(df$Length),1))
min(df$Length)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals)
head(df)
df
length(df)
nrows(df)
nrow(df)
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals)
for (i in 1:100)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals)
}
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals)
for (i in 1:100)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(1,1,1,0.2))
}
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals)
for (i in 1:100)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.2))
}
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col="red",lwd=2)
for (i in 1:100)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.2))
}
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col="red",lwd=2)
for (i in 1:100)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.2))
}
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col="red",lwd=2)
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
for (i in 1:100)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.2))
}
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col="red",lwd=2)
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
coef.beta0<-c()
coef.beta1<-c()
for (i in 1:100)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.2))
coef.beta0<-c(coef.beta0,coef(nls.model)[1])
coef.beta1<-c(coef.beta1,coef(nls.model)[2])
}
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col="red",lwd=2)
hist(coef.beta0)
hist(coef.beta1)
plot(coef.beta0,coef.beta1)
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
coef.beta0<-c()
coef.beta1<-c()
for (i in 1:1000)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.2))
coef.beta0<-c(coef.beta0,coef(nls.model)[1])
coef.beta1<-c(coef.beta1,coef(nls.model)[2])
}
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col="red",lwd=2)
plot(coef.beta0,coef.beta1)
df<-data.frame(Length=Vessel_data$length_meters,MaxSpeed=Vessel_data$max_speed_knots)
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df,start=list(beta0=1,beta1=1),trace=T)
plot(df$Length,df$MaxSpeed)
x.vals<-seq(min(df$Length,na.rm=T),max(df$Length,na.rm=T),1)
coef.beta0<-c()
coef.beta1<-c()
for (i in 1:1000)
{
indices<-sample(seq(1,nrow(df)),replace=T)
df.new<-df[indices,]
nls.model<-nls(MaxSpeed~beta0+beta1*Length,data=df.new,start=list(beta0=1,beta1=1),trace=T)
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col=rgb(0.1,0.1,0.1,0.1))
coef.beta0<-c(coef.beta0,coef(nls.model)[1])
coef.beta1<-c(coef.beta1,coef(nls.model)[2])
}
lines(x.vals,coef(nls.model)[1]+(coef(nls.model)[2])*x.vals,col="red",lwd=2)
plot(coef.beta0,coef.beta1)
mean(df$Length)
mean(df$Length,na.rm=T)
mean(df$MaxSpeed,na.rm=T)
17853*1.5
168969/9
18774.33*1.5
18774.33*0.5
18774.33*0.4
18774.33*0.45
18774.33*0.46
18774.33*0.47
20*0.47
168,969.00*0.63
168969.00*0.63
168969.00*0.5
(168969.00/10)*0.5
(168969.00/10)*0.63
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
?sigma
n<-30
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
summary(fit)
sigma(fit)
n<-30
sigma.vector<-c()
for (i in 1:1000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
hist(sigma.vector)
mean(sigma.vector)
n<-30
sigma.vector<-c()
for (i in 1:5000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
hist(sigma.vector)
mean(sigma.vector)
mean(sigma.vector*(n-2)/n)
mean(sigma.vector*n/(n-2))
n<-30
sigma.vector<-c()
for (i in 1:5000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
mean(sigma.vector)
fitdistr(sigma.vactor,"normal")
library(mass)
library(MASS)
fitdistr(sigma.vactor,"normal")
fitdistr(sigma.vector,"normal")
n<-30
sigma.vector<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
fitdistr(sigma.vector,"normal")
n<-30
sigma.vector<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
fitdistr(sigma.vector,"normal")
n<-30
sigma.vector<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
fitdistr(sigma.vector,"normal")
9.9*(30/28)
9.9*(30/28)
sigma.vector<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
fitdistr(sigma.vector,"normal")
n<-300
sigma.vector<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
fitdistr(sigma.vector,"normal")
n<-300
sigma.vector<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
fitdistr(sigma.vector,"normal")
fit
summary(fit)
sigma(fit)
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
summarY(fit)
summary(fit)
sigma9Fit
sigma(fit)
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
summary(fit)
sigma(fit)
residuals(fit)
fitdistr(residuals(fit),"normal")
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
fitdistr(residuals(fit),"normal")
summary(fit)
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
fitdistr(residuals(fit),"normal")
summary(fit)
n<-10
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
summary(fit)
fitdistr(residuals(fit),"normal")
n<-10
sigma.vector<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
}
fitdistr(sigma.vector,"normal")
hist(sigma.vector)
fitdistr(residuals(fit),"normal")
fitdistr(residuals(fit),"normal")[1]
fitdistr(residuals(fit),"normal")[1][1]
fitdistr(residuals(fit),"normal")$estimate
fitdistr(residuals(fit),"normal")$estimate$mean
fitdistr(residuals(fit),"normal")$estimate[1]
n<-10
sigma.vector<-c()
sigma.vector2<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
sigma.vector2<-c(sigma.vector2,fitdistr(residuals(fit),"normal")$estimate[2])
}
fitdistr(sigma.vector,"normal")
fitdistr(sigma.vector2,"normal")
(10/8)*8.68
n<-100
sigma.vector<-c()
sigma.vector2<-c()
for (i in 1:10000)
{
X<-seq(1,n) #a stand in for some covariate
value<-c()
intercept<-0.15
slope<--2.2
sigma<-10
for (i in 1:length(X))
{
value<-c(value,rnorm(1,mean=intercept+slope*X[i],sd=sigma))
}
fit<-lm(value~X)
sigma.vector<-c(sigma.vector,sigma(fit))
sigma.vector2<-c(sigma.vector2,fitdistr(residuals(fit),"normal")$estimate[2])
}
fitdistr(sigma.vector,"normal")
fitdistr(sigma.vector2,"normal")
9.879456651*(100/98)
summary(fit)
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
