correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
num.iterations<-1000
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
?combn
combn(letters[1:4], 2)
combn(ADPE.time.series, 5)
combn(ADPE.time.series[1:5], 2)
temp<-combn(ADPE.time.series[1:5], 2)
dim(temp)
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,1]]
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,1],]
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,2],]
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
num.iterations
for (k in 1:5)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
trend
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
k
dim(Combinations)
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%ADPE.time.series[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
hist(correlations.scores)
hist(correlations.scores,breaks=30)
prepared_ADPE[best.selected==1,]
head(combinations)
head(Combinations)
head(Combinations[,1:5])
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) k.best<-k
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T))
{
k.best<-k
print(k)
}
}
k
dim(Combinations)
k.best
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e5))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
correlation.scores[k.best]
correlations.scores[k.best]
prepared_ADPE$Site_ID%in%Combinations[,k.best]
aggregated_abundance_all_selected/aggregated_abundance_all
aggregated_abundance_all_selected
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[,20:59]%>%
summarise_all(sum)
aggregated_abundance_all_selected/aggregated_abundance_all
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e5))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,1.2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
prepared_ADPE <- read_csv("Desktop/prepared_ADPE.csv")
prepared_ADPE_long<-prepared_ADPE[prepared_ADPE$Site_ID%in%ADPE.time.series,]
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- prepared_ADPE[,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
plot(trend.all)
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE_long[prepared_ADPE_long$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T))
{
k.best<-k
print(k)
}
}
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,1.2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
aggregated_abundance_all
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,3e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,5e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,6e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1.5e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
hist(correlations.scores)
max(correlations.scores,na.rm=T)
=5.68/2.15
5.68/2.15
5.407/1.42
library(readr)
rings_and_ribs <- read_csv("Dropbox/Biometry/Week 4 Maximum likelihood estimation and confidence intervals/Week 4 Problem set/rings_and_ribs.csv")
View(rings_and_ribs)
hist(rings_and_ribs$`Weight (g)`[rings_and_ribs$Type=="Rings"])
hist(rings_and_ribs$`Weight (g)`[rings_and_ribs$Type=="Rings"],breaks=30)
rings_and_ribs$`Weight (g)`
rings_and_ribs$`Weight (g)`[rings_and_ribs$Type=="Rings"]
rings_and_ribs[rings_and_ribs$Type=="Rings"]$`Weight (g)`
rings_and_ribs[rings_and_ribs$Type=="Rings",]
rings_and_ribs[rings_and_ribs$Type=="Rings",]$`Weight (g)`
as.numeric(rings_and_ribs[rings_and_ribs$Type=="Rings",])
rings_and_ribs[rings_and_ribs$Type=="Rings",5]
hist(rings_and_ribs[rings_and_ribs$Type=="Rings",5])
hist(as.numeric(rings_and_ribs[rings_and_ribs$Type=="Rings",5]))
hist(as.numeric(rings_and_ribs[rings_and_ribs$Type=="Rings",5]),breaks=30)
weights<-rings_and_ribs$`Weight (g)`
type<-rings_and_ribs$Type
hist(weights[type=="Rings"])
hist(as,numeric(weights[type=="Rings"]))
hist(as.numeric(weights[type=="Rings"]))
hist(as.numeric(weights[type=="Rings"]),breaks=10)
hist(as.numeric(weights[type=="Rings"]),breaks=5)
hist(as.numeric(weights[type=="Rings"]),breaks=25)
as.numeric(weights[type=="Rings"])
weights
type
weights[type=="Ring"]
hist(weights[type=="Ring"])
hist(weights[type=="Rib"])
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
plot(seq(0.1,10,0.01),pf(seq(0.1,10,0.01),99,99))
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),9,9))
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),6,6))
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),6,6),typ="l")
vline(x=(6/4))
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2
)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
abline(h=0,lty=2)
abline(h=1,lty=2)
abline(h=0.1,lty=2)
abline(h=0.2,lty=2)
abline(h=0.3,lty=2)
abline(h=0.4,lty=2)
abline(h=0.5,lty=2)
abline(h=0.6,lty=2)
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),6,6),typ="l",lwd=2,col=2)
abline(h=0,lty=2)
abline(h=0.1,lty=2)
abline(h=0.2,lty=2)
abline(h=0.3,lty=2)
abline(h=0.4,lty=2)
abline(h=0.5,lty=2)
abline(h=0.6,lty=2)
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),6,6),typ="l",lwd=3,col=2)
abline(h=0,lty=2)
abline(h=0.1,lty=2)
abline(h=0.2,lty=2)
abline(h=0.3,lty=2)
abline(h=0.4,lty=2)
abline(h=0.5,lty=2)
abline(h=0.6,lty=2)
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),6,6),typ="l",lwd=3,col=2)
abline(h=0,lty=2)
abline(h=0.1,lty=2,lwd=0.5)
abline(h=0.2,lty=2)
abline(h=0.3,lty=2)
abline(h=0.4,lty=2)
abline(h=0.5,lty=2)
abline(h=0.6,lty=2)
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),6,6),typ="l",lwd=3,col=2)
abline(h=0,lty=2)
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2)
abline(h=0.3,lty=2)
abline(h=0.4,lty=2)
abline(h=0.5,lty=2)
abline(h=0.6,lty=2)
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.1,10,0.01),df(seq(0.1,10,0.01),6,6),typ="l",lwd=3,col=2)
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.01,10,0.01),df(seq(0.1,10,0.01),6,6),typ="l",lwd=3,col=2)
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.001,10,0.001),df(seq(0.1,10,0.01),6,6),typ="l",lwd=3,col=2)
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.001,10,0.001),df(seq(0.001,10,0.001),6,6),typ="l",lwd=3,col=2)
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.001,10,0.001),df(seq(0.001,10,0.001),6,6),typ="l",lwd=3,col=2,xlab="x",ylab="PDF")
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
1-pf(0.975,6,6)
1-qf(0.975,6,6)
qf(0.975,6,6)
qf(0.025,6,6)
pf(qf(0.025,6,6))
pf(qf(0.025,6,6),6,6)
1-pf(qf(0.025,6,6),6,6)
plot(seq(0.001,10,0.001),df(seq(0.001,10,0.001),6,6),typ="l",lwd=3,col=2,xlab="x",ylab="PDF",ylim=c(0,1))
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.001,10,0.001),df(seq(0.001,10,0.001),6,6),typ="l",lwd=3,col=2,xlab="x",ylab="PDF",ylim=c(0,1))
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(h=0.7,lty=2,col="gray")
abline(h=0.8,lty=2,col="gray")
abline(h=0.9,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
plot(seq(0.001,10,0.001),df(seq(0.001,10,0.001),6,6),typ="l",lwd=3,col=2,xlab="x",ylab="PDF",ylim=c(0,1))
abline(h=0,lty=2,col="gray")
abline(h=0.1,lty=2,col="gray")
abline(h=0.2,lty=2,col="gray")
abline(h=0.3,lty=2,col="gray")
abline(h=0.4,lty=2,col="gray")
abline(h=0.5,lty=2,col="gray")
abline(h=0.6,lty=2,col="gray")
abline(h=0.7,lty=2,col="gray")
abline(h=0.8,lty=2,col="gray")
abline(h=0.9,lty=2,col="gray")
abline(h=1.0,lty=2,col="gray")
abline(v=(6/4))
abline(v=qf(0.5,6,6))
abline(v=1/2)
abline(v=qf(0.025,6,6))
abline(v=qf(0.975,6,6))
