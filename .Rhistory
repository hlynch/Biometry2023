lines(seq(1980:2019),matrix.with.index[best.selected==1,20:59][2,]*aggregated_abundance_all/matrix.with.index[best.selected==1,20:59][2,1],col=3)
lines(seq(1980:2019),matrix.with.index[best.selected==1,20:59][3,]*aggregated_abundance_all/matrix.with.index[best.selected==1,20:59][3,1],col=4)
lines(seq(1980:2019),matrix.with.index[best.selected==1,20:59][4,]*aggregated_abundance_all/matrix.with.index[best.selected==1,20:59][4,1],col=5)
lines(seq(1980:2019),matrix.with.index[best.selected==1,20:59][5,]*aggregated_abundance_all/matrix.with.index[best.selected==1,20:59][5,1],col=6)
plot(seq(1980:2019),aggregated_abundance_all)
lines(seq(1980:2019),trend.all*aggregated_abundance_all/trend.all,col=1,lwd=2)
aggregated_abundance_all
trend.all
plot(seq(1980:2019),aggregated_abundance_all,ylim=c(0,700000))
lines(seq(1980:2019),trend.all*aggregated_abundance_all/trend.all[1],col=1,lwd=2)
plot(seq(1980:2019),aggregated_abundance_all)
lines(seq(1980:2019),trend.all*aggregated_abundance_all/trend.all[1],col=1,lwd=2)
plot(seq(1980:2019),aggregated_abundance_all,ylim=c(0,40000))
lines(seq(1980:2019),trend.all*aggregated_abundance_all/trend.all[1],col=1,lwd=2)
plot(seq(1980:2019),aggregated_abundance_all,ylim=c(0,400000))
lines(seq(1980:2019),trend.all*aggregated_abundance_all/trend.all[1],col=1,lwd=2)
plot(seq(1980:2019),aggregated_abundance,ylim=c(0,4000000))
aggregated_abundance
plot(seq(1980:2019),aggregated_abundance_all,ylim=c(0,4000000))
plot(seq(1980:2019),aggregated_abundance_all)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16)
lines(seq(1980:2019),aggregated_abundance_all_selected*aggregated_abundance_all[1]/aggregated_abundance_all_selected[1],col=2)
aggregated_abundance_all_selected
aggregated_abundance_all[1]
aggregated_abundance_all_selected[1]
aggregated_abundance_all[1]/aggregated_abundance_all_selected[1]
aggregated_abundance_all_selected*(aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])
aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1]))
plot(seq(1980:2019),aggregated_abundance_all,pch=16)
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1e5,1e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected
aggregated_abundance_all
aggregated_abundance_all_selected/aggregated_abundance_all
correlations.scores<-vector(length=1000)
for (k in 1:1000)
{
binary<-c(rep(1,times=5),rep(0,times=nrow(prepared_ADPE)-5))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:36)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
k
num.iterations<-1000
correlations.scores<-vector(length=num.iterations)
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=5),rep(0,times=nrow(prepared_ADPE)-5))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:36)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
i
k
trend<-matrix(nrow=num.iterations,ncol=36)
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=5),rep(0,times=nrow(prepared_ADPE)-5))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:36)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
hist(correlations.scores)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
hist(correlations.scores,breaks=30)
59-20
2019-1980
window.length<-5
portfolio.size<-10
trend.all<-vector(length=39-window.length+2)
selected<-c(rep(1,times=nrow(prepared_ADPE)-portfolio.size)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-10
trend.all<-vector(length=39-window.length+2)
selected<-c(rep(1,times=nrow(prepared_ADPE)-portfolio.size))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-10
trend.all<-vector(length=39-window.length+2)
selected<-c(rep(1,times=(nrow(prepared_ADPE)-portfolio.size)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=(nrow(prepared_ADPE)-portfolio.size)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
plot(trend.all)
num.iterations<-10
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
trend
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
num.iterations<-10
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
num.iterations<-1000
window.length<-5
portfolio.size<-10
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
selected<-sample(binary,size=length(binary),replace=F)
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
prepared_ADPE[best.selected==1,]
matrix.with.index<- cbind(prepared_ADPE,selected=best.selected)
aggregated_abundance_all_selected <- matrix.with.index[best.selected==1,20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- matrix.with.index[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
?combn
combn(letters[1:4], 2)
combn(ADPE.time.series, 5)
combn(ADPE.time.series[1:5], 2)
temp<-combn(ADPE.time.series[1:5], 2)
dim(temp)
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,1]]
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,1],]
prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,2],]
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
selected<-c(rep(1,times=nrow(prepared_ADPE)))
matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- matrix.with.index[selected==1,(19+i):(19+i+4)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
num.iterations
for (k in 1:5)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
trend
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%temp[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
k
dim(Combinations)
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%ADPE.time.series[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
Combinations<-combn(ADPE.time.series, portfolio.size)
num.iterations<-dim(Combinations)[2]
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) best.selected<-selected
}
hist(correlations.scores)
hist(correlations.scores,breaks=30)
prepared_ADPE[best.selected==1,]
head(combinations)
head(Combinations)
head(Combinations[,1:5])
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T)) k.best<-k
}
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
#    binary<-c(rep(1,times=portfolio.size),rep(0,times=nrow(prepared_ADPE)-portfolio.size))
#    selected<-sample(binary,size=length(binary),replace=F)
#    matrix.with.index<- cbind(prepared_ADPE,selected=selected)
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T))
{
k.best<-k
print(k)
}
}
k
dim(Combinations)
k.best
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e5,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e5))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
correlation.scores[k.best]
correlations.scores[k.best]
prepared_ADPE$Site_ID%in%Combinations[,k.best]
aggregated_abundance_all_selected/aggregated_abundance_all
aggregated_abundance_all_selected
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[,20:59]%>%
summarise_all(sum)
aggregated_abundance_all_selected/aggregated_abundance_all
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e5))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,1.2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
prepared_ADPE <- read_csv("Desktop/prepared_ADPE.csv")
prepared_ADPE_long<-prepared_ADPE[prepared_ADPE$Site_ID%in%ADPE.time.series,]
window.length<-5
portfolio.size<-3
trend.all<-vector(length=(39-window.length+2))
for (i in 1:(39-window.length+2))
{
aggregated_abundance <- prepared_ADPE[,(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend.all[i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:5))$coef[2])
}
plot(trend.all)
correlations.scores<-vector(length=num.iterations)
trend<-matrix(nrow=num.iterations,ncol=(39-window.length+2))
for (k in 1:num.iterations)
{
for (i in 1:39-window.length+2)
{
aggregated_abundance <- prepared_ADPE_long[prepared_ADPE_long$Site_ID%in%Combinations[,k],(19+i):(19+i+window.length-1)]%>%
summarise_all(sum)
trend[k,i]<-as.numeric(lm(as.numeric(aggregated_abundance)~c(1:window.length))$coef[2])
}
correlations.scores[k]<-cor(trend[k,],trend.all)
if (correlations.scores[k]==max(correlations.scores,na.rm=T))
{
k.best<-k
print(k)
}
}
prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],]
aggregated_abundance_all_selected <- prepared_ADPE[prepared_ADPE$Site_ID%in%Combinations[,k.best],20:59]%>%
summarise_all(sum)
aggregated_abundance_all <- prepared_ADPE[,20:59]%>%
summarise_all(sum)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(2e4,1.2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
aggregated_abundance_all
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,2e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,3e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,5e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(0,6e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
plot(seq(1980:2019),aggregated_abundance_all,pch=16,ylim=c(1.5e6,7e6))
lines(seq(1980:2019),aggregated_abundance_all_selected*as.numeric((aggregated_abundance_all[1]/aggregated_abundance_all_selected[1])),col=2)
aggregated_abundance_all_selected/aggregated_abundance_all
hist(correlations.scores)
max(correlations.scores,na.rm=T)
=5.68/2.15
5.68/2.15
5.407/1.42
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
library(readr)
clouds <- read_csv("https://raw.githubusercontent.com/hlynch/Biometry2023/master/_data/clouds.csv")
View(clouds)
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
Treatment = (90, 91, 68, 90, 167, 26, 38, 89, 88, 99, 41, 123, 76, 88, 79, 96, 79, 122, 11, 23)
Control = (52, 104, 146, 27, 46, 120, 5, 15, 11, 48, 30, 40, 8, 42, 74)
Treatment = c(90, 91, 68, 90, 167, 26, 38, 89, 88, 99, 41, 123, 76, 88, 79, 96, 79, 122, 11, 23)
Control = c(52, 104, 146, 27, 46, 120, 5, 15, 11, 48, 30, 40, 8, 42, 74)
t.test(Treatment,Control)
rgamma
?rgamma
setwd("~/Documents/Projects/Biometry2023")
bookdown::render_book("index.Rmd")
